#!/usr/bin/env python3
#
# ptd: put topic to discourse
# updated: 06 jun 25
# by: bill wear

import argparse
import glob
import os
import sys
import yaml

from discourse_api import DiscourseAPI


def main():
    parser, args = parse_args()
    if not args.topic_number:
        parser.print_usage()
        sys.exit(1)

    config = read_config()
    api = DiscourseAPI(config)

    topic_number = args.topic_number

    # Find matching file like "*-123.md"
    pattern = f"*-{topic_number}.md"
    matches = glob.glob(pattern)

    if not matches:
        print(f"❌ No file found matching pattern: {pattern}")
        sys.exit(1)
    elif len(matches) > 1:
        print(f"❌ Multiple files found for topic {topic_number}:")
        for m in matches:
            print(f"  - {m}")
        sys.exit(1)

    filename = matches[0]
    with open(filename, "r") as f:
        markdown_content = f.read()

    # Publish content to Discourse
    api.update_topic_content(topic_number, markdown_content)
    print(f"✅ Updated topic {topic_number} with content from {filename}")


def parse_args():
    parser = argparse.ArgumentParser(
        description="ptd - put topic to discourse"
    )
    parser.add_argument(
        "topic_number", type=int, help="topic number to edit"
    )
    parser.add_argument("-d", action="store_true", help="print debug output")
    return parser, parser.parse_args()


def read_config():
    home = os.path.expanduser("~")
    config_path = os.path.join(home, ".config", "disced.conf")

    if not os.path.exists(config_path):
        sys.exit(f"discedit: config file {config_path} not found.")

    with open(config_path, "r") as f:
        try:
            config = yaml.safe_load(f)
            return config
        except yaml.YAMLError as e:
            sys.exit(f"discedit: error parsing YAML config file: {e}")


if __name__ == "__main__":
    main()
